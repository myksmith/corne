/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HRR250: HRR250 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR250";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HRL250: HRL250 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL250";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        HRR100: HRR100 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR100";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HRL100: HRL100 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL100";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <50>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        hrr150: hrr150 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR150";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <98>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HRL150: HRL150 {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL150";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    macros {
        perplexity_vc_search: perplexity_vc_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp W &kp O &kp U &kp L &kp D &kp SPACE &kp LS(X) &kp LS(X) &kp LS(X) &kp SPACE &kp B &kp E &kp SPACE &kp A &kp SPACE &kp G &kp O &kp O &kp D &kp SPACE &kp F &kp I &kp T &kp SPACE &kp G &kp I &kp V &kp E &kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp I &kp N &kp V &kp E &kp S &kp T &kp O &kp R &kp SPACE &kp S &kp E &kp A &kp R &kp C &kp H &kp SPACE &kp C &kp R &kp I &kp T &kp E &kp R &kp I &kp A>;
            label = "PERPLEXITY_VC_SEARCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt ESC TAB     &kp Q                   &kp W           &kp E               &kp R                 &kp T        &kp Y    &kp U                  &kp I                &kp O                &kp P                            &kp MINUS
&kp CAPSLOCK    &HRL250 LEFT_CONTROL A  &HRL250 LALT S  &HRL150 LEFT_GUI D  &HRL150 LEFT_SHIFT F  &kp G        &kp H    &hrr150 RIGHT_SHIFT J  &hrr150 RIGHT_GUI K  &HRR250 RIGHT_ALT L  &HRR250 RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z                   &kp X           &kp C               &kp V                 &kp B        &kp N    &kp M                  &kp COMMA            &kp DOT              &kp FSLH                         &kp EQUAL
                                                        &mo 4               &lt 2 BACKSPACE       &lt 2 TAB    &kp RET  &lt 1 SPACE            &mo 4
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans                    &kp PG_UP      &kp UP             &kp PG_DN  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans                    &kp LEFT       &kp DOWN           &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(LC(LS(NUMBER_4)))  &kp LG(GRAVE)  &kp LS(LG(GRAVE))  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans                    &trans         &trans
            >;

            label = "nav";
        };

        num-sym {
            bindings = <
&kp GRAVE  &kp LS(EXCL)                   &kp LS(AT)                 &kp LS(POUND)                  &kp LS(DLLR)                 &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)                  &kp LS(STAR)                    &kp LS(LPAR)          &kp LS(RPAR)              &kp MINUS
&trans     &HRL250 LEFT_CONTROL NUMBER_1  &HRL250 LEFT_ALT NUMBER_2  &HRL150 LEFT_COMMAND NUMBER_3  &HRL150 LEFT_SHIFT NUMBER_4  &kp N5           &kp N6         &hrr150 RIGHT_SHIFT NUMBER_7  &hrr150 RIGHT_COMMAND NUMBER_8  &HRR250 RIGHT_ALT N9  &HRR250 RIGHT_CONTROL N0  &kp EQUAL
&kp CAPS   &trans                         &kp PLUS                   &kp MINUS                      &kp COLON                    &kp LBKT         &kp RBKT       &kp LS(LBRC)                  &kp LS(RBRC)                    &kp LBKT              &kp RBKT                  &kp BSLH
                                                                     &trans                         &trans                       &trans           &trans         &trans                        &trans
            >;

            label = "num-sym";
        };

        setup {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7           &kp F8      &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_VOLUME_UP  &trans      &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans          &kp C_VOL_DN     &kp K_MUTE  &trans  &trans   &trans   &trans
                                        &trans        &trans        &trans          &trans           &trans      &trans
            >;

            label = "setup/fn";
        };

        numpad {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &kp N0       &perplexity_vc_search  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &kp COLON    &trans                 &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &trans        &trans
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &kp MINUS    &kp LS(RPAR)           &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &trans        &trans
                        &trans  &trans  &trans       &trans                 &trans        &trans
            >;

            label = "numpad";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        setup_if_both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
